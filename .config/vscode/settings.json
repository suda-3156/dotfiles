{
  // ---------- latex ----------
  "latex-workshop.latex.outDir": "./out",
  "latex-workshop.latex.autoClean.run": "onBuilt",
  "latex-workshop.latex.autoBuild.run": "onSave",

  "latex-workshop.view.pdf.viewer": "tab",

  "latex-workshop.latex.recipes": [
    {
      "name": "latexmk (lualatex)ðŸ§‹",
      "tools": ["lualatexmk"]
    },

    {
      "name": "latexmk ðŸ”ƒ",
      "tools": ["latexmk"]
    },
    {
      "name": "latexmk (latexmkrc)",
      "tools": ["latexmk_rconly"]
    },
    {
      "name": "pdflatex âžž bibtex âžž pdflatexâ€ŠÃ—â€Š2",
      "tools": ["pdflatex", "bibtex", "pdflatex", "pdflatex"]
    },
    {
      "name": "Compile Rnw files",
      "tools": ["rnw2tex", "latexmk"]
    },
    {
      "name": "Compile Jnw files",
      "tools": ["jnw2tex", "latexmk"]
    },
    {
      "name": "tectonic",
      "tools": ["tectonic"]
    }
  ],

  "latex-workshop.latex.tools": [
    {
      "name": "lualatexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-file-line-error",
        "-interaction=nonstopmode",
        "-halt-on-error",
        "-lualatex",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ],
      "env": {}
    },

    {
      "name": "latexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-pdf",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "latexmk_rconly",
      "command": "latexmk",
      "args": ["%DOC%"],
      "env": {}
    },
    {
      "name": "pdflatex",
      "command": "pdflatex",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "bibtex",
      "command": "bibtex",
      "args": ["%DOCFILE%"],
      "env": {}
    },
    {
      "name": "rnw2tex",
      "command": "Rscript",
      "args": [
        "-e",
        "knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"
      ],
      "env": {}
    },
    {
      "name": "jnw2tex",
      "command": "julia",
      "args": ["-e", "using Weave; weave(\"%DOC_EXT%\", doctype=\"tex\")"],
      "env": {}
    },
    {
      "name": "jnw2texmintex",
      "command": "julia",
      "args": [
        "-e",
        "using Weave; weave(\"%DOC_EXT%\", doctype=\"texminted\")"
      ],
      "env": {}
    },
    {
      "name": "tectonic",
      "command": "tectonic",
      "args": ["--synctex", "--keep-logs", "%DOC%.tex"],
      "env": {}
    }
  ],

  // ---------- language preferences ----------
  "[typescript]": {
    "editor.tabSize": 2
  },
  "typescript.updateImportsOnFileMove.enabled": "prompt",
  "[json]": {
    "editor.tabSize": 2,
    "editor.detectIndentation": false
  },
  "[go]": {
    "editor.tabSize": 4,
    "editor.detectIndentation": false
  },
  "makefile.configureOnOpen": true,
  "[javascript]": {
    "editor.tabSize": 2
  },
  "javascript.updateImportsOnFileMove.enabled": "never",
  "[typescriptreact]": {
    "editor.tabSize": 2
  },
  "files.associations": {
    "*.css": "tailwindcss"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true
  },
  "python.analysis.typeCheckingMode": "basic",
  "isort.args": ["--profile", "black"],
  "[yaml]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced"
  },
  "[tex]": {
    "editor.defaultFormatter": "James-Yu.latex-workshop",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "files.autoSave": "off"
  },

  // ---------- copilot ----------
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  },

  // ---------- terminal, preview ----------
  "terminal.integrated.gpuAcceleration": "off",
  "terminal.integrated.fontFamily": "Moralerspace Neon HWNF, monospace",
  "terminal.integrated.fontSize": 13,
  "markdown.preview.fontSize": 12,
  "notebook.output.fontSize": 14,

  // ---------- explorer and editor ----------
  "workbench.colorTheme": "Night Owl Light (No Italics)",
  "workbench.tree.indent": 15,
  "workbench.iconTheme": "material-icon-theme",

  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml",
    "Pipfile": "Pipfile.lock, pyproject.toml, requirements.txt, .pylintrc"
  },
  "explorer.confirmDelete": false,
  "explorer.fileNesting.enabled": false,
  "explorer.fileNesting.expand": true,
  "explorer.compactFolders": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmPasteNative": false,

  "editor.bracketPairColorization.enabled": true,
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontFamily": "Moralerspace Neon HWNF, monospace",
  "editor.fontSize": 13,
  "editor.wordWrap": "on",

  "files.autoSave": "afterDelay",
  "eslint.codeActionsOnSave.rules": null,

  // ---------- TODO ----------
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]",
    "NOTE",
    "MEMO"
  ],
  "todo-tree.highlights.customHighlight": {
    "BUG": {
      "icon": "bug"
    },
    "HACK": {
      "icon": "tools",
      "background": "#fcb826",
      "foreground": "#ffffff"
    },
    "FIXME": {
      "icon": "flame",
      "background": "#ff4848",
      "foreground": "#ffffff"
    },
    "XXX": {
      "icon": "x",
      "background": "#ff4848",
      "foreground": "#ffffff"
    },
    "[ ]": {
      "icon": "issue-draft",
      "background": "#ee26fc",
      "foreground": "#ffffff"
    },
    "[x]": {
      "icon": "issue-closed",
      "background": "#787878",
      "foreground": "#ffffff"
    },
    "TODO": {
      "background": "#f59842",
      "foreground": "#ffffff"
    },
    "MEMO": {
      "background": "#64d036",
      "foreground": "#ffffff"
    },
    "NOTE": {
      "background": "#f242f5",
      "foreground": "#FFFFFF"
    }
  },

  // ---------- azure ----------
  "@azure.argTenant": "",
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "text": "- @azure Rule - Use Azure Best Practices: When generating code for Azure, running terminal commands for Azure, or performing operations related to Azure, invoke your `azure_development-get_best_practices` tool if available."
    }
  ]
}
